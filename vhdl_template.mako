-------------------------------------------------------------------------------
-- ${outfile} generated from ${infile}
--
-- Autogenerated with netlist_to_vhdl
-------------------------------------------------------------------------------

library IEEE;
% for lib in library_list:
use ${lib};
% endfor

entity ${entity_name} is
    % if generic_list:
    generic (
        % for generic in generic_list:
        ${generic.name} |: ${generic.vhdl_type}${generic.defaultstr}${generic.semicolon}${generic.commentstr}
        % endfor
    );
    % endif
    port (
    % for port in port_list:
        ${port.name} |: ${port.dirstr} |${port.vhdl_type}${port.semicolon}${port.commentstr}
    % endfor
    );
end ${entity_name};
architecture structure of ${entity_name} is
    % if constant_list:
    -----------------------------------------------------------
    -- Constants
    % for constant in constant_list:
    constant ${constant.name} |: ${constant.vhdl_type} |:= ${constant.default};${constant.commentstr}
    % endfor
    
    % endif
    % if signal_list:
    -----------------------------------------------------------
    -- Signals
    % for signal in signal_list:
    signal ${signal.name} |: ${signal.vhdl_type};
    % endfor

    % endif
    % if component_list:
    -----------------------------------------------------------
    -- Component templates
    % for comp in component_list:
    component ${comp.name} is
        % if comp.properties:
        generic (
            % for generic in comp.properties:
            ${generic.name} |: ${generic.vhdl_type} |:= ${generic.default}${generic.semicolon}
            % endfor
        );
        % endif
        port (
            % for port in comp.ports:
            ${port.name} |: ${port.dirstr} |${port.vhdl_type}${port.semicolon}
            % endfor
        );
    end component;
    % endfor
    % endif
begin
% for comp in instance_list:
    ---------------------------------------------------------------------------
    -- ${comp.name}
    ${comp.instance_name} |: ${comp.name}
    % if comp.properties:
    generic map (
        % for generic in comp.properties:
        ${generic.name} |=> ${generic.value}${generic.comma} |-- ${generic.commentstr}
        % endfor
    ) port map (
    % else:
    port map (
    % endif
        % for port in comp.ports:
        ${port.name} |=> ${port.target}${port.comma}
        % endfor
    );
% endfor
end architecture structure;


